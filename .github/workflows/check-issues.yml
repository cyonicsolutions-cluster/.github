name: Auto Close Issues

on:
  schedule:
    - cron: '0 7 * * 1-5' # Executa toda segunda a sexta às 07:00
  workflow_dispatch: # Permite que o workflow seja executado manualmente

permissions:
  contents: write
  issues: write

jobs:
  close_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Close Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }} # Usuário que forneceu o token
        run: |
          ORG="cyonicsolutions-cluster"
          CLOSE_MESSAGE="**Issue reporting are not accepted.** Please visit https://github.com/getcyonic/${repo}/compare and submit your pull request there with the same content.\nThank you!"

          # Verifica se o token está definido
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "GITHUB_TOKEN is not set. Exiting..."
            exit 1
          fi

          # Obtém a lista de repositórios da organização
          response=$(curl -s -o repos_response.txt -w "%{http_code}" -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/orgs/$ORG/repos?per_page=100")

          if [ "$response" -ne 200 ]; then
            echo "Error: Unable to fetch repositories. Status code: $response"
            cat repos_response.txt
            exit 1
          fi

          repos=$(cat repos_response.txt | jq -r '.[].full_name')

          for repo in $repos; do
            echo "Checking repository: $repo"

            # Obtém issues abertas
            issues=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$repo/issues?state=open" | jq -r '.[] | {number: .number, user: .user.login}')

            for issue_info in $(echo "$issues" | jq -c '.'); do
              issue_number=$(echo "$issue_info" | jq -r '.number')
              issue_author=$(echo "$issue_info" | jq -r '.user')

              echo "Found open issue: #$issue_number in $repo by $issue_author"

              # Comenta na issue
              curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
                -d "{\"body\": \"$CLOSE_MESSAGE\"}" \
                "https://api.github.com/repos/$repo/issues/$issue_number/comments"

              # Fecha a issue
              curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
                -d "{\"state\": \"closed\"}" \
                "https://api.github.com/repos/$repo/issues/$issue_number"

              echo "Closed issue #$issue_number in $repo."
            done
          done
